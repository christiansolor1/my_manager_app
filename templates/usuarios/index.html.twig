{% extends 'base.html.twig' %}

{% block title %}Gestión De Usuarios
{% endblock %}


{% block body %}


<div class="auth-page">

	<div class="container_breadcrumb mt-5">

		{# <a href="{{ path('app_logout') }}">Logout</a> #}

		<nav aria-label="breadcrumb">
			<ol class="breadcrumb " style="background: #ffffff; border-radius: 10px;">
				{% for label, route in breadcrumb %}
				<li class="breadcrumb-item {% if loop.last %}active{% endif %}">
					{% if not loop.last %}
					<a href="{{ route | raw }}">{{ label | raw }}</a>
					{% else %}
					{{ label | raw }}
					{% endif %}
				</li>
				{% endfor %}
				<li class="breadcrumb-item active" aria-current="page">{{breadcrumb_name}}</li>
			</ol>
		</nav>

	</div>
	<!-- El resto de tu contenido aquí -->

	<div class="card">
		<div class="card-body">
			<div class="container_table">

				<div class="d-flex justify-content-between">
					<h2>Gestión de usuarios</h2>
					<div>
						<a id="btn_new_user" class="btn btn-sm btn-success datatable_btn_add" href="#" title="Agregar">
							<span>Add Usuario</span>
						</a>
					</div>

				</div>
				<br>

				<!-- Agregar clase 'table-responsive' para hacer la tabla responsive -->
				<div class="table-responsive">
					<table id="dataTable_usuarios" class="table table-striped table-bordered display nowrap "
						style="width:100%">
						<thead>
							<tr>
								<th class="text-center">#</th>
								<th class="text-center">ID</th>
								<th class="text-center">Correo</th>
								<th class="text-center">Rol</th>
								<th class="text-center">Usuario</th>
								<th class="text-center">Nombres</th>
								<th class="text-center">Apellidos</th>
								<th class="text-center">Estado</th>
								<th class="text-center">Genero</th>
								<th class="text-center">Nacimiento</th>
								<th class="text-center">Registro</th>
								<th class="text-center">Acceso</th>
								<th class="text-center">Acciones</th>

							</tr>
						</thead>
						<tbody>
							<!-- Los datos se cargarán dinámicamente aquí -->

						</tbody>
					</table>
				</div>


			</div>
		</div>

	</div>

</div>


<!-- ================================Modal  user====================================-->

<!--  new -->
<div class="modal fade" id="modal_new_user" tabindex="-1" role="dialog" aria-labelledby="miModalLabel"
	aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg">
		<div class="modal-content">

			<div class="modal-header">
				<h2 class="modal-title" id="miModalLabel">Nuevo Usuario</h2>
				<button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			{# {{ form(form) }} #}
			<form method="post">
				<div class="modal-body">
					<div class="container ">
						<div class="row">
							<div class="col-md-12 text-center">
								<h3>Datos del Usuario
									<span class="data_id_datatable" id="new_user_id"></span>
								</h3>
								<br>


							</div>
						</div>

						<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									<label for="username">Username</label>
									<div class="input-group mb-3">
										<input class="form-control" type="text" id="new_user_username"
											placeholder="Username..." name="username" value="csolorzano">
									</div>
								</div>


								<!-- Campo para la contraseña -->
								<div class="form-group">
									<label for="password">Contraseña</label>
									<div class="input-group mb-3">
										<input class="form-control" type="password" id="new_user_password"
											placeholder="Contraseña del usuario..." name="password" minlength="8"
											required>
									</div>
								</div>

								<!-- Campo para confirmar la contraseña -->
								<div class="form-group">
									<label for="confirm_password">Confirmar Contraseña</label>
									<div class="input-group mb-3">
										<input class="form-control" type="password" id="new_user_confirm_password"
											placeholder="Confirmar contraseña..." name="confirm_password" minlength="8"
											required>
									</div>
								</div>


								<div class="form-group">
									<label for="nombres">Nombres</label>
									<div class="input-group mb-3">
										<input class="form-control" type="text" id="new_user_nombres"
											placeholder="Nombres del usuario..." name="nombres" pattern="[A-Za-z0-9]+"
											value="Christian David" required>
									</div>
								</div>

								<div class="form-group">
									<label for="apellidos">Apellidos</label>
									<div class="input-group mb-3">
										<input class="form-control" type="text" id="new_user_apellidos"
											placeholder="Apellidos del usuario..." name="apellidos"
											pattern="[A-Za-z0-9]+" value="Solorzano Giron" required>
									</div>
								</div>

								<div class="form-group">
									<label for="fechaNacimiento">Fecha de Nacimiento</label>
									<div class="input-group mb-3">
										<input type="date" class="form-control" id="new_user_fechaNacimiento"
											name="fechaNacimiento" value="" required>
									</div>
								</div>
							</div>

							<div class="col-md-6">
								<div class="form-group">
									<label for="correo">Correo electrónico</label>
									<div class="input-group mb-3">
										<input class="form-control" type="email" id="new_user_email"
											placeholder="Correo Electrónico del usuario..." name="correo"
											value="csolorzano@mail.com" required>
									</div>
								</div>

								<div class="form-group">
									<label for="genero">Género</label>
									<div class="input-group mb-3">
										<select class="form-control" id="new_user_genero_id" name="genero">
											<option value="1">Masculino</option>
											<option value="2">Femenino</option>
										</select>
									</div>
								</div>

								<div class="form-group">
									<label for="estado_usuario">Estado del Usuario</label>
									<div class="input-group mb-3">
										<select class="form-control" id="new_user_estado_usuario_id"
											name="estado_usuario">
											<option value="1">Activo</option>
											<option value="2">Inactivo</option>
										</select>
									</div>
								</div>

								<div class="form-group">
									<label for="estado_usuario">Rol de usuario</label>
									<div class="input-group mb-3">
										<select class="form-control" id="new_user_rol" name="rol">
											<option value="ROLE_USER">Usuario</option>
											<option value="ROLE_ADMIN">Administrador</option>

											<option value="ROLE_INVITED">Cliente</option>
										</select>
									</div>
								</div>
								<div class="form-group">
									<label for="imagen">Selecciona una imagen</label>
									<div class="input-group mb-3">
										<input type="file" class="form-control-file" id="new_user_imagen" name="imagen">
									</div>

								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">
						Cerrar</button>
					<button id="btn_modal_Guardar_New_user" type="button" class="btn btn-primary">Guardar
						Cambios</button>
					</a>
				</div>
			</form>
		</div>
	</div>
</div>
<!-- Modal edit-->
<div class="modal fade" id="modal_edit_user" tabindex="-1" role="dialog" aria-labelledby="miModalLabel"
	aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">

			<div class="modal-header">
				<h2 class="modal-title">Editar Usuario
				</h2>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>

			<form method="post">
				<div class="modal-body">
					<div class="container ">
						<div class="row">
							<div class="col-md-12 text-center">
								<h3>Datos del Usuario
									<span id="edit_user_id" class="badge badge-secondary"></span>

								</h3>
								<br>

							</div>
						</div>

						<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									<label for="username">Username</label>
									<div class="input-group mb-3">
										<input class="form-control" type="text" id="edit_user_username"
											placeholder="Username..." name="username" required readonly>
									</div>
								</div>


								<!-- Campo para la contraseña -->
								<div class="form-group">
									<label for="password">Contraseña</label>
									<div class="input-group mb-3">
										<input class="form-control" type="password" id="edit_user_password"
											placeholder="Contraseña del usuario..." name="password" required>
									</div>
								</div>

								<!-- Campo para confirmar la contraseña -->
								<div class="form-group">
									<label for="confirm_password">Confirmar Contraseña</label>
									<div class="input-group mb-3">
										<input class="form-control" type="password" id="edit_userconfirm_password"
											placeholder="Confirmar contraseña..." name="confirm_password" required>
									</div>
								</div>


								<div class="form-group">
									<label for="nombres">Nombres</label>
									<div class="input-group mb-3">
										<input class="form-control" type="text" id="edit_user_nombres"
											placeholder="Nombres del usuario..." name="nombres" required>
									</div>
								</div>

								<div class="form-group">
									<label for="apellidos">Apellidos</label>
									<div class="input-group mb-3">
										<input class="form-control" type="text" id="edit_user_apellidos"
											placeholder="Apellidos del usuario..." name="apellidos" required>
									</div>
								</div>

								<div class="form-group">
									<label for="fechaNacimiento">Fecha de Nacimiento</label>
									<div class="input-group mb-3">
										<input type="date" class="form-control" id="edit_user_fechaNacimiento"
											name="fechaNacimiento" required>
									</div>
								</div>
							</div>

							<div class="col-md-6">
								<div class="form-group">
									<label for="correo">Correo electrónico</label>
									<div class="input-group mb-3">
										<input class="form-control" type="email" id="edit_user_email"
											placeholder="Correo Electrónico del usuario..." name="edit_user_email"
											required>
									</div>
								</div>

								<div class="form-group">
									<label for="genero">Género</label>
									<div class="input-group mb-3">
										<select class="form-control" id="edit_user_genero" name="edit_user_genero">
											<option value="1">Masculino</option>
											<option value="2">Femenino</option>
										</select>
									</div>
								</div>

								<div class="form-group">
									<label for="estado_usuario">Estado del Usuario</label>
									<div class="input-group mb-3">
										<select class="form-control" id="edit_user_estado" name="edit_user_estado">
											<option value="1">Activo</option>
											<option value="2">Inactivo</option>
										</select>
									</div>
								</div>

								<div class="form-group">
									<label for="estado_usuario">Rol de usuario</label>
									<div class="input-group mb-3">
										<select class="form-control" id="edit_user_rol" name="edit_user_rol">
											<option value="ROLE_USER">Usuario</option>
											<option value="ROLE_ADMIN">Administrador</option>
											<option value="ROLE_INVITED">Cliente</option>
										</select>
									</div>
								</div>
								<div class="form-group">
									<label for="imagen">Selecciona una imagen</label>
									<div class="input-group mb-3">
										<input type="file" class="form-control-file" id="edit_user_imagen"
											name="imagen">
									</div>

								</div>

								<div class="form-group">
									<div class="custom-file">
										<input type="file" class="custom-file-input" id="customFileLang" lang="es">
										<label class="custom-file-label" for="customFileLang">Seleccionar
											Archivo</label>
									</div>


								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
					<button id="btn_modal_editar_user" type="button" class="btn btn-primary"
						data-dismiss="modal">Guardar Cambios</button>

				</div>
			</form>


		</div>
	</div>
</div>
<!-- Modal info -->
<div class="modal fade" id="modal_info_user" tabindex="-1" role="dialog" aria-labelledby="reportModalLabel"
	aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="reportModalLabel">Detalles del Usuario</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<div class="report-style">
					<p><strong>ID:</strong> <span id="info_user_id"></span></p>
					<p><strong>Usuario:</strong> <span id="info_user_username"></span></p>
					<p><strong>Nombres:</strong> <span id="info_user_nombres"></span></p>
					<p><strong>Apellidos:</strong> <span id="info_user_apellidos"></span></p>
					<p><strong>Correo:</strong> <span id="info_user_email"></span></p>
					<p><strong>Fecha de Nacimiento:</strong> <span id="info_user_fechaNacimiento"></span></p>
					<p><strong>Género:</strong> <span id="info_user_genero"></span></p>
					<p><strong>Estado:</strong> <span id="info_user_estado"></span></p>
					<p><strong>Rol:</strong> <span id="info_user_rol"></span></p>
					<p><strong>Fecha de Registro:</strong> <span id="info_user_fechaRegistro"></span></p>
					<p><strong>Fecha de Acceso:</strong> <span id="info_user_fechaAcceso"></span></p>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
				<button type="button" class="btn btn-primary" onclick="mostrarPdf()" id="imprimirPDF">Imprimir</button>
				
			</div>
		</div>
	</div>
</div>

<script>
	// window.onload = function () {
	// //alert("Pagina cargada");
	// cargarUsuario(start, length);
	// };


	// ///////////////////////////////////////////////////////////     VARIABLES     //////////////////////////////////////////////////////////////////

	// Variable global para almacenar la instancia de la tabla
	var tablaUsuarios = null;

	// =====================================================  MENSAJES/ ALERTAS/ NOTIFICACIONES ======================================================
	// Función reutilizable de SweetAlert
	function mostrarSweetAlert(icono, titulo, texto) {
		Swal.fire({
			icon: icono,
			title: titulo,
			text: texto
		});
		// iconos:
		// 'success'
		// 'error'
		// 'warning'
		// 'info'
		// 'question'
		// mostrarSweetAlert(error, 'Error', texto);
		// mostrarSweetAlert('success', 'Éxito', texto);
	}


	// ///////////////////////////////////////////////////////////     CRUDE     //////////////////////////////////////////////////////////////////


	// ====================================================== CREDAR REGISTRO USUARIO ==================================================================

	// abrir modal para crear un usuario
	$("#btn_new_user").click(function () {
		$("#modal_new_user").modal('show');
		$('#new_user_confirm_password').add(is - invalid);
	});

	$('#btn_modal_Guardar_New_user').click(function () {
		const username = $('#new_user_username').val();
		const password = $('#new_user_password').val();
		const nombres = $('#new_user_nombres').val();
		const apellidos = $('#new_user_apellidos').val();
		const fechaNacimiento = $('#new_user_fechaNacimiento').val();
		const email = $('#new_user_email').val();
		const genero = $('#new_user_genero_id').val();
		const estado_usuario = $('#new_user_estado_usuario_id').val();
		const rol = $('#new_user_rol').val();


		const data = {
			username,
			password,
			nombres,
			apellidos,
			fechaNacimiento,
			email,
			genero,
			estado_usuario,
			rol
		};
		const swalNewUser = Swal.fire({
			title: 'Registrando usuario',
			html: '<div class="spinner-border text-primary" role="status"><span class="visually-hidden"></span></div>',
			allowOutsideClick: () => !Swal.isLoading(),
			showConfirmButton: false, // Oculta el botón de confirmar para evitar acciones durante el registro
			onBeforeOpen: () => {
				$.ajax({
					type: 'POST',
					url: '/usuarios/new_user',
					contentType: 'application/json',
					data: JSON.stringify(data),
					success: function (response) {
						if (response.message === "Usuario creado con éxito") {
							$('#modal_new_user').modal('hide');
							$('#dataTable_usuarios').DataTable().ajax.reload();
							mostrarSweetAlert('success', 'Éxito', response.message);
						} else {
							console.error('Error inesperado al registrar el usuario');
							mostrarSweetAlert('error', 'Error',
								'Error inesperado al registrar el usuario');
						}
					},
					error: function (xhr, status, error) {
						mostrarSweetAlert('error', 'Error', error);
					}
				});
			}
		});

		swalNewUser.then((result) => {
			if (result.dismiss === Swal.DismissReason.backdrop || result.dismiss === Swal.DismissReason
				.esc) {
				mostrarSweetAlert('info', 'Proceso de registro cancelado',
					'Se canceló el registro del usuario.');
			}
		});



	});


	// ======================================================== OBTENER DATOS DE USUARIO ==================================================================
	$(document).ready(function () {

		var tablaUsuarios = $('#dataTable_usuarios').DataTable({
			// "language": {
			// 	"url": "https://cdn.datatables.net/plug-ins/1.11.5/i18n/Spanish.json"
			// },
			// Otras opciones de tu DataTable
			"processing": true,
			"serverSide": true,
			"searching": true,
			"searchDelay": 500,
			"ajax": {
				"url": '/usuarios/data',
				"type": "GET",
				"data": function (d) {
					// d.start = d.start || 0; // Inicializa en 0 si no está definido
					// d.length = d.length || 10; // Inicializa en 10 si no está definido
					// d.search = {
					// value: d.search.value || ''
					// }; // Estructura del término de búsqueda
				},
				dataSrc: "data",
				dataFilter: function (
					response_data
				) { // Procesar los valores de recordsTotal y recordsFiltered de la respuesta
					var response = JSON.parse(response_data);
					response.recordsTotal = response.recordsTotal;
					response.recordsFiltered = response.recordsFiltered;
					return JSON.stringify(response);
				}

			},
			columns: [{
					data: null,
					render: function (data, type, row, meta) {
						return `
							<div class="d-flex align-items-center">
								
								<div class="custom-control custom-checkbox ml-2">
									<input type="checkbox" class="custom-control-input" id="checkbox-${
row.id
}">
									<label class="custom-control-label" for="checkbox-${
row.id
}"></label>
								</div>

								<div>${
meta.row + 1
}</div>
							</div>
						`;
					}
				},
				{
					data: 'id'
				},
				{
					data: 'correo'
				},
				{
					data: 'rol',
					render: function (data, type, row) {
						let rolesHTML = '';
						data.forEach(function (rol) {
							rolesHTML += `
							<label class="item_row">${rol}</label>
							<br>
							`;
						});
						return rolesHTML;
					}
				}, {
					data: 'usuario'
				}, {
					data: 'nombres'
				}, {
					data: 'apellidos'
				}, { // Definición de la columna personalizada
					data: null, // No estará basada en datos preexistentes
					render: function (data, type, row) {
						return `<td class="datatable_btn_state d-flex">
									<span class="mr-2">${data.estado}</span>

									<div class="custom-control custom-switch">
										<input type="checkbox" class="custom-control-input"	id="customSwitch-${data.id}" 
										onchange="editarEstadoUsuario(this, '${data.id}', '${data.estado}', '${data.usuario}')"	${data.estado === 'Activo' ? 'checked' : ''}>
										
										<label class="custom-control-label no-selectt" for="customSwitch-${data.id}"></label>
									</div>
								</td>
						`;
					}
				}, {
					data: 'genero'
				}, {
					data: 'nacimiento'
				}, {
					data: 'registro'
				}, {
					data: 'acceso'
				}, {
					data: null,
					render: function (data, type, row) {
						return `
								<div class="btn-toolbar" role="toolbar">
									<div class="btn-group mr-2" role="group">
										<a class="btn btn-sm btn-info datatable_btn_detail" href="#" data-id="${data.id}" data-username="${data.usuario}" title="Detalles del Usuario"></a>
									</div>

									<div class="btn-group mr-2" role="group">
										<a class="btn btn-sm btn-warning datatable_btn_edit" href="#"" data-id="${data.id}" data-username="${data.usuario}" title="Editar Usuario"></a>
									</div>

									<div class="btn-group mr-2" role="group">
										<a class="btn btn-sm btn-secondary datatable_btn_pass" href="#" data-id="${data.id}" data-username="${data.usuario}" title="Restablecer contraseña"></a>
									</div>

									<div class="btn-group" role="group">
										<a class="btn btn-sm btn-danger datatable_btn_delete" href="#" data-id="${data.id}" data-username="${data.usuario}" title="Eliminar usuario"></a>
									</div>
								</div>
                    
						`;
					}
				}
				// Agrega más columnas si es necesario
			],
			"lengthMenu": [
				10,
				25,
				50,
				75,
				100
			], // Define las opciones de cantidad de registros por página
			"pagingType": 'full_numbers', // Establece el estilo de paginación
			drawCallback: function () {
				paginaActual = tablaUsuarios.page.info()
					.page; // Almacena la página actual después de cada redibujo
			}
		});

		// ==================================================== REVISAR =================================================================

		// Evento 'length.dt' que se activa al cambiar la cantidad de registros por página
		$('#dataTable_usuarios').on('length.dt', function (e, settings, len) {
			var info = tablaUsuarios.page.info();
			var start = info.start; // Obtén el inicio de la página actual
			var length = len;
			// Obtén la nueva cantidad de registros por página

			// //cargarUsuarios(start, length); // Llama a cargarUsuarios con la nueva configuración
			// function cargarUsuarios(start, length) {
			// tablaUsuarios.ajax.url('/usuarios/data?start=' + start + '&length=' + length)
			// .load(); // Recarga los datos con la nueva configuración
			// }
			tablaUsuarios.ajax.reload();
		});

		function cargarUsuarios(start, length) {
			tablaUsuarios.ajax.url('/usuarios/data?start=' + start + '&length=' + length).load(function () {
				tablaUsuarios.page(paginaActual).draw(
					'page'); // Vuelve a la página actual después de cargar los datos
			});
		}

	});


	//======================================================= MODAL INFO DE USUARIO=============================================================

	$(document).on('click', '.datatable_btn_detail', function (e) {
		e.preventDefault();

		const id = $(this).data('id');
		const username = $(this).data('username');
		// Obtener la fila específica al hacer clic en el botón
		const fila = $(this).closest('tr');

		// Encontrar el índice de la fila en el DataTable
		const index = $('#dataTable_usuarios').DataTable().row(fila).index();
		const rowData = $('#dataTable_usuarios').DataTable().row(index).data();

		const info_user_id = rowData.id;
		const info_user_username = rowData.usuario;
		const info_user_nombres = rowData.nombres;
		const info_user_apellidos = rowData.apellidos;
		const info_user_email = rowData.correo;
		const info_user_fechaNacimiento = rowData.nacimiento;
		const info_user_genero = rowData.genero;
		const info_user_estado = rowData.estado;
		const info_user_rol = rowData.rol;
		const info_user_registro = rowData.registro;
		const info_user_acceso = rowData.acceso;


		let generoValue;

		if (info_user_genero === 'Masculino') {
			generoValue = 1;
		} else if (info_user_genero === 'Femenino') {
			generoValue = 2;
		}

		let estadoValue;

		if (info_user_estado === 'Activo') {
			estadoValue = 1;
		} else if (info_user_estado === 'Inactivo') {
			estadoValue = 2;
		}

		$('#info_user_id').text(id);
		$('#info_user_username').text(username);
        $('#info_user_nombres').text(info_user_nombres);
		$('#info_user_apellidos').text(info_user_apellidos);
        $('#info_user_email').text(info_user_email);
		$('#info_user_fechaNacimiento').text(info_user_fechaNacimiento);
        $('#info_user_genero').text(info_user_genero);
		$('#info_user_estado').text(info_user_estado);
        $('#info_user_rol').text(info_user_rol);
        $('#info_user_fechaRegistro').text(info_user_registro);
		$('#info_user_fechaAcceso').text(info_user_acceso);
		
		$('#modal_info_user').modal('show');
	});

	// ====================================================== EDITAR USUARIO  ==================================================================

	$(document).on('click', '.datatable_btn_edit', function (e) {
		e.preventDefault();
		const userId = $(this).data('id');
		const userName = $(this).data('username');

		// Obtener la fila específica al hacer clic en el botón
		const fila = $(this).closest('tr');

		// Encontrar el índice de la fila en el DataTable
		const index = $('#dataTable_usuarios').DataTable().row(fila).index();
		const rowData = $('#dataTable_usuarios').DataTable().row(index).data();

		Swal.fire({
			title: '¿Quieres editar el usuario ' + userName + ' ?',
			text: 'Esta acción actualizará la información del usuario',
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#3085d6',
			cancelButtonColor: '#d33',
			confirmButtonText: 'Sí, Editar'
		}).then((result) => {
			if (result.isConfirmed) {
				modalEditarUsuario(rowData, userId, userName);
			}
		});
	});

	function modalEditarUsuario(rowData, userId, userName) {
		const edit_user_id = rowData.id;
		const edit_user_username = rowData.usuario;
		const edit_user_nombres = rowData.nombres;
		const edit_user_apellidos = rowData.apellidos;
		const edit_user_email = rowData.correo;
		const edit_user_fechaNacimiento = rowData.nacimiento;
		const edit_user_genero = rowData.genero;
		const edit_user_estado = rowData.estado;
		const edit_user_rol = rowData.rol;


		let generoValue;

		if (edit_user_genero === 'Masculino') {
			generoValue = 1;
		} else if (edit_user_genero === 'Femenino') {
			generoValue = 2;
		}

		let estadoValue;

		if (edit_user_estado === 'Activo') {
			estadoValue = 1;
		} else if (edit_user_estado === 'Inactivo') {
			estadoValue = 2;
		}


		var partesFecha = edit_user_fechaNacimiento.split('/');
		var fechaNacimiento = new Date(partesFecha[2], partesFecha[1] - 1, partesFecha[0]);

		// Convertir la fecha al formato "AAAA-MM-DD"
		var year = fechaNacimiento.getFullYear();
		var month = ('0' + (
			fechaNacimiento.getMonth() + 1
		)).slice(-2);
		var day = ('0' + fechaNacimiento.getDate()).slice(-2);
		var fechaFormateada = year + '-' + month + '-' + day;

		$("#edit_user_id").text(edit_user_id);
		$("#edit_user_username").val(edit_user_username);
		$("#edit_user_nombres").val(edit_user_nombres);
		$("#edit_user_apellidos").val(edit_user_apellidos);

		$("#edit_user_fechaNacimiento").val(fechaFormateada);
		$("#edit_user_email").val(edit_user_email);
		$("#edit_user_genero").val(generoValue);
		$("#edit_user_estado").val(estadoValue);

		// Otros campos del modal con la información del usuario

		// Finalmente, mostrar el modal
		$('#modal_edit_user').modal('show');
	}

	$("#btn_modal_editar_user").click(function () {
		const id = $('#edit_user_id').text();
		const username = $('#edit_user_username').val();
		const password = $('#edit_user_password').val();
		const nombres = $('#edit_user_nombres').val();
		const apellidos = $('#edit_user_apellidos').val();
		const fechaNacimiento = $('#edit_user_fechaNacimiento').val();
		const email = $('#edit_user_email').val();
		const genero = $('#edit_user_genero').val();
		const estado_usuario = $('#edit_user_estado').val();
		const rol = $('#edit_user_rol').val();

		const data = {
			id,
			username,
			password,
			nombres,
			apellidos,
			fechaNacimiento,
			email,
			genero,
			estado_usuario,
			rol
		};

		const swalNewUser = Swal.fire({
			title: 'Actualizando usuario',
			html: '<div class="spinner-border text-primary" role="status"><span class="visually-hidden"></span></div>',
			allowOutsideClick: () => !Swal.isLoading(),
			showConfirmButton: false, // Oculta el botón de confirmar para evitar acciones durante el registro
			onBeforeOpen: () => {
				$.ajax({
					type: 'POST',
					url: '/usuarios/update_user',
					contentType: 'application/json',
					data: JSON.stringify(data),
					success: function (response) {
						if (response.message === "Usuario actualizado con éxito") {
							$('#modal_edit_user').modal('hide');
							$('#dataTable_usuarios').DataTable().ajax.reload();
							mostrarSweetAlert('success', 'Éxito', response.message);
						} else {
							console.error('Error inesperado al actualizar el usuario');
							mostrarSweetAlert('error', 'Error',
								'Error inesperado al actualizar el usuario');
						}
					},
					error: function (xhr, status, error) {
						mostrarSweetAlert('error', 'Error', error);
					}
				});
			}
		});

		swalNewUser.then((result) => {
			if (result.dismiss === Swal.DismissReason.backdrop || result.dismiss === Swal.DismissReason
				.esc) {
				mostrarSweetAlert('info', 'Proceso de actualizar cancelado',
					'Se canceló la actualización del usuario.');
			}
		});

	})


	// ====================================================== EDITAR ESTADO USUARIO  ==================================================================

	function editarEstadoUsuario(input, userId, stateUser, userUsername) {
		let estadoUsuario_ms;
		let new_estado;
		const id = userId;

		if (stateUser === 'Activo') {
			estadoUsuario_ms = 'Inactivar';
			new_estado = 2;
		} else if (stateUser === 'Inactivo') {
			estadoUsuario_ms = 'Activar';
			new_estado = 1;
		}

		Swal.fire({
			title: '¿Estás seguro que deseas ' + estadoUsuario_ms + ' el usuario: ' + userUsername + '?',
			text: "Esta acción cambiará el estado del usuario",
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#3085d6',
			cancelButtonColor: '#d33',
			confirmButtonText: 'Sí, cambiar'
		}).then((result) => {
			if (result.isConfirmed) {
				$.ajax({
					url: `/usuarios/update/estado/${id}/${new_estado}`,
					method: 'POST',
					contentType: 'application/json',
					success: function (response) { // console.log(response);
						if (response.success) {
							$('#dataTable_usuarios').DataTable().ajax.reload();
							mostrarSweetAlert('success', 'Éxito',
								'el estado del usuario se actualizo exitosamente.');
							// console.log('Usuario actualizado');
							// cargarUsuario();
							// tablaUsuarios.draw(); // Actualiza la tabla DataTable después del cambio
						} else {
							if (response.error === 'Usuario no encontrado') {
								Swal.fire('Error', 'El usuario no existe' + usuarioId, 'error');
								input.checked = !input
									.checked; // Revertir el cambio del switch si el usuario no existe
							} else {
								console.error('Error al actualizar el usuario');

								input.checked = !input
									.checked; // Revertir el cambio del switch si falla la actualización
							}
						}
					},
					error: function (xhr, status, error) {
						console.error('Error:', error);
						mostrarSweetAlert('error', 'Error', error);
						input.checked = !input
							.checked; // Revertir el cambio del switch si ocurre un error
					}
				});
			} else {
				input.checked = !input.checked; // Revertir el cambio del switch si el usuario cancela
			}
		});
	}

	// ====================================================== EDITAR CONTRASEÑA USUARIO  ==================================================================

	$(document).on('click', '.datatable_btn_pass', function (e) {
		e.preventDefault();
		// Obtener los atributos de datos
		const userId = $(this).data('id');
		const userName = $(this).data('username');

		// Mostrar SweetAlert para cambiar la contraseña
		Swal.fire({
			title: 'Cambiar Contraseña',
			html: `¿Deseas cambiar la contraseña para el usuario ${userName}?`,
			icon: 'question',
			showCancelButton: true,
			confirmButtonText: 'Sí, cambiar contraseña',
			cancelButtonText: 'Cancelar'
		}).then((result) => {
			if (result.isConfirmed) {
				// Mostrar SweetAlert para escribir y guardar una nueva contraseña
				Swal.fire({
					title: 'Nueva Contraseña',
					input: 'password',
					inputPlaceholder: 'Ingresa la nueva contraseña',
					showCancelButton: true,
					confirmButtonText: 'Guardar Contraseña',
					cancelButtonText: 'Cancelar',
					inputAttributes: {
						autocapitalize: 'off'
					},
					showLoaderOnConfirm: true,
					preConfirm: (password) => {
						$.ajax({
							url: `/usuarios/update/password/${userId}/${password}`,
							method: 'POST',
							contentType: 'application/json',
							success: function (response) {
								if (response.response) {
									$('#dataTable_usuarios').DataTable().ajax
										.reload();
								} else {
									if (response.error == 'Usuario no encotrado') {
										mostrarSweetAlert('error',
											'El usuario no existe' + usuarioId,
											error);
									} else {
										console.error(
											'Error al actualizar la contraseña del usuario'
										);
									}
								}
							},
							error: function (xhr, status, error) {
								console.error('Error:', error);
								mostrarSweetAlert('error', 'Error', error);
							}

						});

						Swal.fire('Contraseña guardada',
							`Se actualizo al contraseña del usuario: ${userName}`,
							'success');
					},
					allowOutsideClick: () => !Swal.isLoading()
				});

			}
		});
	})

	// ====================================================== ELIMINAR USUARIO  ==================================================================

	$(document).on('click', '.datatable_btn_delete', function (e) {
		e.preventDefault();
		const userId = $(this).data('id');
		const userName = $(this).data('username');
		Swal.fire({
			title: '¿Estás seguro de querer eliminar el usuario ' + userName + ' ?',
			text: "Esta acción no tendrá reversión",
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#3085d6',
			cancelButtonColor: '#d33',
			confirmButtonText: 'Sí, eliminar',
			showLoaderOnConfirm: true,
			preConfirm: () => {
				return new Promise((resolve) => {
					eliminarUsuario(userId, resolve);
				});
			},
			allowOutsideClick: () => !Swal.isLoading()
		});
	});

	function eliminarUsuario(userId, resolve) {
		$.ajax({
			type: 'DELETE',
			url: '/usuarios/remove/' + userId,
			success: function () {
				mostrarSweetAlert('success', 'El usuario: ' + userId + ' se eliminó correctamente', '');
				$('#dataTable_usuarios').DataTable().ajax.reload();
				resolve();
			},
			error: function (error) {
				mostrarSweetAlert('error', 'Error', error);
				console.error('Error al eliminar el usuario', error);
				resolve(); // Resuelve la promesa aunque ocurra un error
			}
		});
	}

	// ======================================================== PDF ============================================================

	function mostrarPdf() {
        var url = "{{ path('preview_pdf') }}";
        window.open(url, '_blank');
    }

	

</script>{% endblock %}